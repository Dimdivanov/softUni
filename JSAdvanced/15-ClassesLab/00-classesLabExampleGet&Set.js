class Circle {
  constructor(radius) {
    this.radius = radius;
  }

  get diameter() {
    return 2 * this.radius;
  }

  set diameter(value) {
    this.radius = value / 2;
  }

  get area() {
    return Math.PI * this.radius ** 2;
  }
}
//реално след като създадем тази инстанци ако искаме да влизаме в нея
//и да променяме стойностите на обекта можем да го правим с гет и сет

//OOP методи, които се използват за четене и записване на стойности
// на прайвът или защитени свойства в класовете

const myCircle = new Circle(5);
//гетъра е метод в класа , който се ползва за връщане (четене) на стойността на определено с-во;
console.log(myCircle.diameter); // Използване на гетър diameter
// Резултат: 10

//сетъра е метод в клас , който променя (записва) стойността на определено с-во;
myCircle.diameter = 14; // Използване на сетър diameter
console.log(myCircle.radius); // Проверка на променената стойност
// Резултат: 7

console.log(myCircle.area); // Използване на гетър area
// Резултат: ~153.93804002589985

/* 
Тези методи предоставят контрол върху начина, по който стойностите на 
свойствата на обектите се четат и променят. Гетърите връщат стойности, а сетърите
приемат нови стойности и ги присвояват на свойствата на класа. Те често се
използват за валидация на данните и скриване на детайлите за имплементацията.
*/
